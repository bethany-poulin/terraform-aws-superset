---
- hosts: all
  pre_tasks:
  
    - name: Install cron (Debian).
      apt: name=cron state=present
      when: ansible_os_family == 'Debian'

  roles:
    - common

#    - role: geerlingguy.postgresql
#      become: yes
#      when: enable_superset_local_postgres | default(false) | bool

    - role: cloudalchemy.node-exporter
      when: (node_exporter | default(false))

    - role: geerlingguy.certbot
      become: yes
      certbot_create_if_missing: true
      certbot_admin_email: "{{ certbot_admin_email }}"
      certbot_certs:
        - domains:
            - "{{ superset_domain_name }}"
      certbot_create_standalone_stop_services: []
      when: enable_superset_ssl

    - role: geerlingguy.nginx
      when: enable_superset_nginx

    - role: geerlingguy.redis
    
#    - insight_infra.ansible_role_superset
    - ansible-role-superset

  tasks:
    - name: Flush handlers in case any configs have changed.
      meta: flush_handlers
  
    - name: Test secure connection to SSL domain.
      uri:
        url: https://certbot-test.servercheck.in/
        status_code: 200
      delegate_to: localhost
      become: false
      when:
        - enable_superset_nginx
        - enable_superset_ssl

  vars:
    nginx_vhost_template: nginx.conf
  
    enable_superset_nginx: false
    enable_superset_ssl: false
    
    nodejs_npm_global_packages:
      - name: jslint
      - name: node-sass
    nodejs_version: "13.x"
    nodejs_install_npm_user: root
    npm_config_prefix: /root/.npm-global
    npm_config_unsafe_perm: "true"
    
    postgresql_databases:
      - name: "{{superset_postgres_db_name}}"
    postgresql_users:
      - name: "{{superset_postgres_db_user}}"
        password: "{{superset_postgres_db_pass}}"
    
    node_exporter_tls_server_config:
      cert_file: /etc/node_exporter/tls.cert
      key_file: /etc/node_exporter/tls.key
    node_exporter_basic_auth_users:
      randomuser: examplepassword
